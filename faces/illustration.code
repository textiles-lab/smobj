# convention
# face face-name[yarn-dir]
# 	edge [consume/produce+type]edge-label needle-resource yarn-resoure (for each edge in face)
# 	code
# 		knitout code
# 		op resourceFrom resourceTo
# 			(resourceFrom must be bound to consume edges -yX -lX)
# 			(resourceTo must be bound to produce edges +yX +lX OR temporaries)
# 			(every produce edge must be produced!)
# 			(any temporary must be freed)
# todo:
# 1. add missing faces (also in .sf)
#    - begin>, begin< (bigger chunk including tuck dance)
#    - few complex faces (cable2x2f+, seed2x2)
#    - missing directional variants? bed variants (auto?)
#
#
#Code variant hints (variant name / face)
#Ordering hints (“happens-after” / instruction)
#Resource assignment hints (needle locations / edge)
#Hints have different sources
#User hints -- directly user specified
#Conservative Inferred hints -- consequence of user hint or inferred hint (without any arbitrary decisions)
#Heuristic hints -- consequence of existing hints under a heuristic/arbitrary/optimization rule
#From the hints, total instruction ordering can be computed
#A “scheduled smobj” contains all the hints + the total instruction order
#Hint types are remembered in the file, since when editing probably the program wants to recompute the non-user hints.
#Also we need a carrier order in the file (or carriers are alphabetical front-to-back)
#And probably in the face programs for multi-carrier faces
#E.g. `;;Carriers: ` header in face code

#helper faces



face make-left-tuck+
	edge  -lX f0
	edge  +yX f0.5 A
	edge  +lX f0
	edge  +lX f-1
	edge  -yX f-0.5 A
	code
		;;Carriers: A
		tuck + f-1 A
		knit + f0 A

face make-right-tuck+
	edge  -lX f0
	edge  +yX f0.5 A
	edge  +lX f1
	edge  +lX f0
	edge  -yX f-0.5 A
	code
		;;Carriers: A
		knit + f0 A
		tuck + f1 A

face make-left-tuck-twist+
	edge -lX f0
	edge +yX f0.5 A
	edge +lX f0
	edge +lX f-1
	edge -yX f-0.5 A
	code
		;;Carriers: A
		tuck - f-1 A
		knit + f0 A

face make-left-tuck-twist-
	edge  -lX f0
	edge  -yX f0.5 A
	edge  +lX f0
	edge  +lX f-1
	edge  +yX f-0.5 A
	code
		;;Carriers: A
		knit - f0 A
		tuck + f-1 A

face make-right-tuck-twist+
	edge -lX f0
	edge +yX f0.5 A
	edge +lX f0
	edge +lX f1
	edge -yX f-0.5 A
	code
		;;Carriers: A
		knit + f0 A
		tuck - f1 A

face make-right-tuck-twist-
	edge -lX f0
	edge -yX f+0.5 A
	edge +lX f0
	edge +lX f1
	edge +yX f-0.5 A
	code
		;;Carriers: A
		tuck + f1 A
		knit - f0 A

#face make-left-split+
#	edge -lX f0
#	edge +yX f-0.5 A
#	edge +lX f1
#	edge +lX f0
#	edge -yX f0.5 A
#	code
#		pass #TODO placeholder
#
#face make-right-split+
#	edge -lX f0
#	edge +yX f0.5 A
#	edge +lX f1
#	edge +lX f0
#	edge -yX f-0.5 A
#	code
#		pass #TODO placeholder
#
face decrease-right+ #decrease onto the rightwards vs decrease the rightmost
	edge -lX f0
	edge -lX f1
	edge +yX f0.5 A
	edge +lX f1
	edge -yX f-0.5 A
	code
		;;Carriers: A
		xfer - f0 b0 #+/- direction are hints on the src, + = everything to the right of f0
		#rack 1, implicit racking should be fine right?
		xfer - b0 f1
		knit + f1 A

face decrease-left-
	edge -lX f0
	edge -lX f1
	edge -yX f1.5 A
	edge +lX f0
	edge +yX f-0.5 A
	code
		;;Carriers: A
		xfer f1 b1
		xfer b1 f0
		knit - f0 A

face decrease-left+ 
	edge -lX f0
	edge -lX f1
	edge +yX f0.5 A
	edge +lX f0
	edge -yX f-0.5 A
	code
		;;Carriers: A
		xfer f1 b1
		xfer b1 f0
		knit + f0 A

face decrease-right-
	edge -lX f0
	edge -lX f1
	edge -yX f-0.5 A
	edge +lX f1
	edge +yX f+0.5 A
	code
		;;Carriers: A
		xfer f0 b0
		xfer b0 f1
		knit + f1 A



face turn-tuck)((    #NOTE: tuck is in the direction of the lower course
	edge -lX f0
	edge +lX f0
	edge +yX f-0.5 A
	edge -yX f-0.5 A
	code
		;;Carriers: A
		tuck + f0 A
		miss - f0 A

face turn-tuck))(
	edge -lX f0
	edge -yX f0.5 A
	edge +yX f0.5 A
	edge +lX f0
	code
		;;Carriers: A
		tuck - f0 A
		miss + f0 A

face turn)((
	edge -lX f0
	edge +lX f0
	edge +yX f-0.5 A
	edge -yX f-0.5 A
	code
		;;Carriers: A
		miss - f0 A

face turn))(
	edge -lX f0
	edge -yX f0.5 A
	edge +yX f0.5 A
	edge +lX f0
	code
		;;Carriers: A
		miss + f0 A

face edge(
	edge x
	edge -y1 f0.5 A
	edge +y1 f0.5 A
	edge x
	edge x
	code
		#pass #misses, maybe nothing to do other than get ready for going the other way

face edge)
	edge x
	edge x
	edge x
	edge +y1 f-0.5 A
	edge -y1 f-0.5 A
	code
		#pass #misses? nothing to do other than get ready for going the other way

face end<  #NOTE: needs another type for "in" which is also the more complex type (inhook or tuck from  gripper/release)
	edge -lX f0
	edge -yX f+0.5 A
	edge +lX f0
	code
		;;Carriers: A
		knit - f0 A
		out A

face end>
	edge -lX f0
	edge +lX f0
	edge -yX f-0.5 A
	code
		;;Carriers: A
		knit + f0 A
		out A


face start<
	edge -lX f0
	edge +lX f0
	edge +yX f0.5 A
	code
		;;Carriers: A
		in A
		knit - f0 A

face start>
	edge -lX f0
	edge +yX f-0.5 A
	edge +lX f0
	code
		;;Carriers: A
		in A
		knit + f0 A

face knit+
	edge -lX f0
	edge +yX f0.5 A
	edge +lX f0
	edge -yX f-0.5 A
	code
		;;Carriers: A
		knit + f0 A

face knit-
	edge -lX f0
	edge -yX f+0.5 A
	edge +lX f0
	edge +yX f-0.5 A
	code
		;;Carriers: A
		knit - f0 A

face knit+
	edge -lX b0
	edge +yX b0.5 A
	edge +lX b0
	edge -yX b-0.5 A
	variant back-bed
	code
		;;Carriers: A
		knit + b0 A

face knit-
	edge -lX b0
	edge -yX b+0.5 A
	edge +lX b0
	edge +yX b-0.5 A
	variant back-bed
	code
		;;Carriers: A
		knit - b0 A


face knit-fair-isle-2+ #slightly awkward in terms of using all resources
	edge -lX f0
	edge +yX f0.5 A B
	edge +lX f0
	edge -yX f-0.5 A B
	code
		;;Carriers: A B
		knit + f0 B

face knit-fair-isle-1+
	edge -lX f0
	edge +yX f0.5 A B
	edge +lX f0
	edge -yX f-0.5 A B
	code
		;;Carriers: A B
		knit + f0 A

face knit-plating-1+
	edge -lX f0
	edge +yX f0.5 A B
	edge +lX f0
	edge -yX f-0.5 A B
	code
		;;Carriers: A B
		knit + f0 A B

face knit-plating-2+
	edge -lX f0
	edge +yX f0.5 A B
	edge +lX f0
	edge -yX f-0.5 A B
	code
		;;Carriers: A B
		knit + f0 B A

face knit+.2111 #What face is this ??
	edge -lX f0
	edge +yX f-0.5 A
	edge +lX f0
	edge -yX f0.5 A
	code
		;;Carriers: A
		knit + f0 A

face drop+
	edge -l1 f0
	edge +y0 f0.5
	edge +l0 x
	edge -y0 f-0.5
	code
		;;Carriers: A
		drop f0

face drop-
	edge -l1 f0
	edge -y0 f0.5
	edge +l0 x
	edge +y0 f-0.5
	code
		;;Carriers: A
		drop f0

face tuck-twist+
	edge -lX f0
	edge +yX f0.5 A
	edge +lX f0
	edge -yX f-0.5 A
	code
		;;Carriers: A
		tuck - f0 A

face tuck-twist-
	edge -lX f0
	edge -yX f+0.5 A
	edge +lX f0
	edge +yX f-0.5 A
	code
		;;Carriers: A
		tuck + f0 A

face purl+
	edge -lX f0
	edge +yX f0.5 A
	edge +lX f0
	edge -yX f-0.5 A
	code
		;;Carriers: A
		xfer f0 b0
		knit + b0 A
		xfer b0 f0

face purl-
	edge -lX f0
	edge -yX f0.5 A
	edge +lX f0
	edge +yX f-0.5 A
	code
		;;Carriers: A
		xfer f0 b0
		knit - b0 A
		xfer b0 f0

face seed-stitch+
	edge -l1 f0
	edge -l1 f1
	edge -y1 f1.5 A
	edge +y1 f1.5 B
	edge +l1 f1
	edge +l1 f0
	edge -y1 f0.5 B
	edge +y1 f0.5 A
	code
		;;Carriers: A B
		#block1
		xfer f0 b0
		knit - f1 A
		knit - b0 A
		xfer b0 f0
		#block2
		xfer f1 b1
		knit + f0 B
		knit + b1 B
		xfer b1 f1


#-- transfer helpers
face xfer+1
	edge  -lX f0
	edge  x
	edge  +lX f1
	edge  x 
	code
		xfer f0 b0
		xfer b0 f1


